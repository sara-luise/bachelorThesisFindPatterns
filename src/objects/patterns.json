{
  "patterns": [
    {
      "uid": "pattern_flexible-areas",
      "name": "flexible areas",
      "imageName": "flexible-areas",
      "facets": [
        "blocks_area-element",
        "blocks_rectangular-grid",
        "blocks_nested-layout-structure",
        "interaction_adjust-interaction",
        "interaction_append-interaction",
        "interaction_remove-interaction",
        "searchTask_examine"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "--",
        "context": "The design pattern cannot be assigned to any specific search pattern. Rather, it is suitable as a flexible container for different search strategies such as a filter area and an area for displaying the results. Furthermore, it is suitable for smartphones and tablets with touch interaction as well as for desktop applications with mouse interaction.",
        "crossReference": "For example, the design pattern can be combined with a design pattern of the category Facet Navigation, Keyword-Based Search or Recommendation-Based Search to display filtering options in one of the areas. Furthermore, the design pattern Tile View with Images or Tile View with Subsets is suitable for displaying the result set.",
        "problem": "The search strategies change in the course of the search and different levels of detail and consequently different amounts of space are required for the supporting interface elements.",
        "solutionApproach": "Flexible areas can support different levels of detail. The area in focus can be enlarged, whereas the opposite area is given less space. The levels of detail automatically adapt to the available space. The areas can be moved by an interactive centre axis."
      },
      "sampleIllustration": {
        "imageNames": ["08_DelViz"],
        "imageExplanation":
        "Example of the DelViz application: the left area has been enlarged so that that additional information is provided in the form of Bézier curves can become"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "DelViz",
          "imageName": "DelViz"
        },
        {
          "name": "Motbasi",
          "imageName": "Motbasi"
        }
      ]
    },
    {
      "uid": "pattern_multi-column-keyword-filter",
      "name": "multi column keyword filter",
      "imageName": "multi-column-keyword-filter",
      "facets": [
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_list-layout-structure",
        "interaction_select-interaction",
        "interaction_exclude-interaction",
        "interaction_filter-interaction",
        "data_folksonomy-data-structure",
        "data_nominal-attribute-type",
        "searchTask_formulate"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Keyword based search",
        "context": "The design pattern can be used for filters that use the List module as a layout structure. Furthermore, it is suitable for smartphones and tablets with touch interaction as well as for desktop applications with mouse interaction.",
        "crossReference": "The design pattern can be combined with design patterns that represent the results of the current filter selection such as the tile view with images or with subsets or the result list with image and text. Furthermore, the design pattern can be extended with the Indented taxonomy to structure the filter list. To support further analysis tasks, the design pattern Weighted Bézier curves can be superimposed.",
        "problem": "The user wants to formulate his concrete need for information as precisely as possible. There are terms that he wants to include or also exclude.",
        "solutionApproach": "The user is provided with a multi-column filter area. The filters available are offered in the middle column. If these are dragged into the selection column, a Boolean AND operation is applied to the data set. Filter criteria that are dragged into the exclusion column are excluded from the result set. By combining these Boolean operations, complex search queries are possible. If no exclusion criteria are necessary, the design pattern can also be offered with only an additional column for selecting the filter criteria"
      },
      "sampleIllustration": {
        "imageNames": ["03_DelViz"],
        "imageExplanation":
        "Example of DelViz application: the keywords in the middle can be searched for be dragged left or right. The keywords on the left are in the exclusion zone and are colored black Keywords on the right side in the selection area (red)"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "DelViz",
          "imageName": "DelViz"
        }
      ]
    },
    {
      "uid": "pattern_weighted-bezier-curves",
      "name": "weighted bézier curves",
      "imageName": "weighted-bezier-curves",
      "facets": [
        "blocks_line-element",
        "blocks_node-link-layout-structure",
        "blocks_rectangular-grid",
        "blocks_radial-grid",
        "data_folksonomy-data-structure",
        "data_quantitative-attribute-type",
        "searchTask_analyze"
      ],
      "facetDividers": ["blocks_rectangular-grid"],
      "info": {
        "searchTask": "Keyword based search",
        "context": "",
        "crossReference": "",
        "problem": "The user wants to analyse how strongly certain keywords or filter criteria depend on each other and which ones occur particularly frequently in combination.",
        "solutionApproach": "The strength of the relationship between the selected keyword and the rest of the The strength of the relationship between the selected keyword and the remaining filter criteria is represented by Bézier curves with different widths. The additional mapping of this property to the visual attribute transparency enables the individual curves to be better distinguished from one another. If several keywords are selected, the curves are the curves are bundled."
      },
      "sampleIllustration": {
         "imageNames": ["04a_DelViz", "04b_DelViz"],
        "imageExplanation":
        "Example of DelViz application with rectangular layout (left) and example from the TagCircus application with radial layout"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "DelViz",
          "imageName": "DelViz"
        }
      ]
    },
    {
      "uid": "pattern_(stacked)-radial-bar-chart",
      "name": "(stacked) radial bar chart",
      "imageName": "(stacked)-radial-bar-chart",
      "facets": [
        "blocks_text-element",
        "blocks_radial-grid",
        "blocks_bars-layout-structure",
        "interaction_filter-interaction",
        "interaction_append-interaction",
        "interaction_rotate-interaction",
        "interaction_zoom-interaction",
        "interaction_inspect-interaction",
        "data_folksonomy-data-structure",
        "data_nominal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_formulate",
        "searchTask_trace",
        "searchTask_analyze"
      ],
      "facetDividers": ["interaction_append-interaction"],
      "info": {
        "searchTask": "Keyword based search",
        "context": "The design pattern can be used for an ordered list of keywords. The colour coding also makes it possible to map keywords in a taxonomy. Furthermore, the design pattern is suitable for multi-touch interfaces as well as for desktop applications with mouse interaction. For the former, a zoom functionality should be provided to facilitate the selection of the bars.",
        "crossReference": "The design pattern can be combined with, for example, the Weighted Bézier Curves design pattern or the Smart Lattice to provide further analysis options.",
        "problem": "The result set is narrowed down by various filter criteria and the user wants to know which criteria are particularly strongly associated with the current selection. In addition, he does not want to lose track of his previous selection.",
        "solutionApproach": "The keywords are presented in the form of bars, the height of which codes the frequency distribution. This makes it possible to quickly assess which filter criteria occur particularly frequently in combination with the current selection. Filter categories can also be coded by colour (see example illustrations). Furthermore, it is possible to nest the bar charts within each other, to provide a search history and to inform the user about the effect of his or her filter selection in each filter step (see second example)."
      },
      "sampleIllustration": {
         "imageNames": ["(stacked)-radial-bar-chart"],
        "imageExplanation":
        "Example from the Facettice prototype as a simple bar chart (left) and TagCircus with stacked bar chart (right). Furthermore, this shows right example the overlay with Bézier curves."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "TagCircus",
          "imageName": "TagCircus"
        },
        {
          "name": "Facettice",
          "imageName": "Facettice"
        }
      ]
    },
    {
      "uid": "pattern_smart-lattice",
      "name": "smart lattice",
      "imageName": "smart-lattice",
      "facets": [
        "blocks_line-element",
        "blocks_triangular-grid",
        "blocks_node-link-layout-structure",
        "interaction_pan-interaction",
        "interaction_zoom-interaction",
        "data_folksonomy-data-structure",
        "data_quantitative-attribute-type",
        "searchTask_trace",
        "searchTask_analyze"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Keyword based search",
        "context": "The resulting path can be used as a search history in the keyword-based or facet-based search. The design pattern is suitable for desktop applications with mouse interaction. By means of zoom functionality, the individual nodes can be enlarged, which also makes it possible to use them on multi-touch surfaces. on multi-touch surfaces is also possible.",
        "crossReference": "The design pattern can, for example, be combined with the design pattern Radial Bar Chart to clearly arrange different filter options in each node. Furthermore, the design pattern Tile view with images or Result list with image and text is suitable for displaying the result set.",
        "problem": "Due to the frequent selection and deselection of filter criteria, the user loses track of which filter combinations have already been considered.",
        "solutionApproach": "By using a Hasse diagram, a search history is built up from the previous filter decisions. This not only shows the active filters, but also provides information about which filter decisions were undone. When a new filter is added, the Hasse diagram builds up downwards. When a filter decision is removed, a path is built up in the opposite direction."
      },
      "sampleIllustration": {
         "imageNames": ["09_facettice2"],
        "imageExplanation":
        "Example of the Facettice prototype with multiple filter steps"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Facettice",
          "imageName": "Facettice"
        }
      ]
    },
    {
      "uid": "pattern_sieve-illustration-with-filters",
      "name": "sieve illustration with filters",
      "imageName": "sieve-illustration-with-filters",
      "facets": [
        "blocks_image-element",
        "blocks_line-element",
        "blocks_radial-grid",
        "blocks_partitioned-layout-structure",
        "interaction_inspect-interaction",
        "interaction_append-interaction",
        "interaction_remove-interaction",
        "data_ontology-data-structure",
        "data_nominal-attribute-type",
        "searchTask_reformulate",
        "searchTask_trace",
        "searchTask_analyze"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Keyword based search",
        "context": "The visualisation is suitable for search scenarios in which many filter criteria can be selected, such as keyword-based search or recommendation-based search involving filters. The visualisation is primarily suitable for desktop interfaces with mouse interaction due to the filigree representation of the result lines. By adding an interactive auxiliary element (see illustration), it is possible to move the current selection clockwise and thus use it on a touch interface.",
        "crossReference": "The design pattern is suitable for analysing filter criteria, for example in combination with the design pattern Tiles with Filter Concepts. Furthermore, the combination with the design pattern Moodboard with Glyph Cluster is suitable for collecting matching results.",
        "problem": "The user receives no matching results or too few results with his filter selection. He wants to be able to understand how his selection criteria affect the results in order to be able to adjust the search query accordingly.",
        "solutionApproach": "The effects of the individual filter criteria on the result set can be made visible by means of a screen display. In this, the results are arranged as vertical lines in an area or radially around a circle centre. Each selected filter is displayed as a horizontally perforated line or ring. If a filter criterion does not apply, the respective result line is stopped at the horizontal filter line, otherwise it is let through like a sieve. By moving the mouse over the individual result lines, a preview of the result is offered in the centre of the circle or next to the sieve display. If too many potentially interesting results were filtered out with one filter step, the filter can be deactivated by a mouse click."
      },
      "sampleIllustration": {
         "imageNames": ["17_Motbasi_1"],
        "imageExplanation":
        "Example from the MotBasi search application with the selected destination in the centre of the display and three selected filter criteria"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Motbasi",
          "imageName": "Motbasi"
        }
      ]
    },
    {
      "uid": "pattern_configurator-with-detailed-information",
      "name": "configurator with detailed information",
      "imageName": "configurator-with-detailed-information",
      "facets": [
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_list-layout-structure",
        "blocks_tiles-layout-structure",
        "interaction_adjust-interaction",
        "interaction_inspect-interaction",
        "interaction_select-interaction",
        "interaction_exclude-interaction",
        "data_multidimensional-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_formulate",
        "searchTask_examine"
      ],
      "facetDividers": ["blocks_list-layout-structure"],
      "info": {
        "searchTask": "similarity search",
        "context": "The design pattern is suitable for users who have little domain expertise. Based on examples, the user can learn the meaning or functionality of individual properties and thus better assess which criteria are important for his or her current information needs. It is suitable for various data structures and data types. The design pattern can be used in desktop scenarios and multi-touch scenarios.",
        "crossReference": "The design pattern should be combined with a representation of similar products. For example, the tile view with glyphs or the glyphs or the scatterplot with glyphs.",
        "problem": "The user does not know the search domain well enough to be able to formulate a search query with the help of abstract filter criteria.",
        "solutionApproach": "The configurator with detailed information offers an alternative way of entering the search process based on an example. The user has the opportunity to learn more about the individual features of the product by being provided with additional detailed information and explanations by expanding a list. Based on this information, the user can decide which product features correspond to his or her expectations and can select or deselect them. On the basis of this selection, the user is offered similar products."
      },
      "sampleIllustration": {
         "imageNames": ["configuration-with-detailed-information"],
        "imageExplanation": "Properties of the selected product are presented in a fold-out list that can be unfolded for detailed information if required (left), the display uses a tile view instead of a list, with the currently selected property presented in detail below it (right)"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Example-based search with scatterplot layout",
          "imageName": "Example-based search with scatterplot layout"
        },
        {
          "name": "Example-based search with tile layout",
          "imageName": "Example-based search with tile layout "
        }
      ]
    },
    {
      "uid": "pattern_scatter-plot-with-glyphs",
      "name": "scatter plot with glyphs",
      "imageName": "scatter-plot-with-glyphs",
      "facets": [
        "blocks_glyph-element",
        "blocks_rectangular-grid",
        "blocks_2d-plot-layout-structure",
        "interaction_select-interaction",
        "interaction_adjust-interaction",
        "interaction_inspect-interaction",
        "interaction_append-interaction",
        "data_multidimensional-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_analyze"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Similarity search",
        "context": "The design pattern is suitable for products with many abstract properties, such as financial products, and depending on the glyph representation, it is suitable for different data types. It is suitable for both mouse and touch interaction, but sufficient space should be available to analyse the distributions (at least tablet size).",
        "crossReference": "The design pattern is suitable as an alternative result representation for searching in products with many abstract properties. For example, it can be combined with the Configurator design pattern with detailed information to set the criteria of the similarity search",
        "problem": "The user is looking for a product where many abstract characteristics are relevant for the purchase decision.",
        "solutionApproach": "Glyphs are used to represent the different properties of the product. These are placed in a scatterplot. The horizontal positioning can be used to show the similarity to the current selection and thus serve the similarity search. Similar products are shown enlarged on the left margin to allow the user to identify all product features. Dissimilar products are zoomed out on the right-hand side, giving the user an overview of the distributions in the dataset. The vertical positioning can be used to sort the products according to a certain property or to divide them into different groups. The latter is illustrated by areas in the background of the scatterplot."
      },
      "sampleIllustration": {
         "imageNames": ["11_bubble_1"],
        "imageExplanation":
        "Scatterplot using the example of financial search: the financial products are represented as a ring glyph in which the colour of the rings codes the price development of a financial product. At the right edge of the interface, the selection criteria according to which the financial products are to be grouped (in this case according to product group or underlying value)."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Example-based search with scatterplot layout",
          "imageName": "Example-based search with scatterplot layout"
        }
      ]
    },
    {
      "uid": "pattern_tile-view-with-glyphs",
      "name": "tile view with glyphs",
      "imageName": "tile-view-with-glyphs",
      "facets": [
        "blocks_glyph-element",
        "blocks_rectangular-grid",
        "blocks_tiles-layout-structure",
        "interaction_select-interaction",
        "interaction_adjust-interaction",
        "interaction_append-interaction",
        "interaction_sort-interaction",
        "data_multidimensional-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_analyze"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Similarity search",
        "context": "The design pattern is suitable for products with many abstract properties, such as financial products. Depending on the glyph representation, it is suitable for different data types. The design pattern is suitable for desktop scenarios as well as for smartphone and tablet scenarios with touch interaction, as the available space is optimally utilised by the tile view.",
        "crossReference": "The design pattern is suitable as an alternative result representation for searching with products with many abstract properties. For example, it can be combined with the Configurator design pattern with detailed information to define the criteria of the similarity search.",
        "problem": "The user is looking for a product for which many abstract characteristics are relevant for the purchase decision. He primarily uses a smartphone with limited display space for the search.",
        "solutionApproach": "Glyphs are used to represent the various properties of the product. These are arranged in a tile view that makes optimal use of the available space. The tile layout also allows for various sorting options. For example, products can be sorted according to similarity or according to different product properties, and thus products with important properties for the user can be placed in the first tiles."
      },
      "sampleIllustration": {
         "imageNames": ["tile-view-with-glyphs"],
        "imageExplanation":
        "The example shows a tile view with financial glyphs, the rings of which encode the price development of a financial product. The background of the glyph is greyed out according to the similarity value, so that a darker background indicates a very similar product, whereas a lighter background."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Example-based search with tile layout",
          "imageName": "Example-based search with tile layout"
        }
      ]
    },
    {
      "uid": "pattern_focus-area-with-(detail)-glyphs",
      "name": "focus area with (detail) glyphs",
      "imageName": "focus-area-with-(detail)-glyphs",
      "facets": [
        "blocks_glyph-element",
        "blocks_radial-grid",
        "blocks_cluster-layout-structure",
        "interaction_distort-interaction",
        "interaction_append-interaction",
        "interaction_remove-interaction",
        "interaction_highlight-interaction",
        "data_multidimensional-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_collect",
        "searchTask_compare",
        "searchTask_verify"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Similarity search",
        "context": "The design pattern is suitable for different data types as it can be applied with different glyph representations. In addition to abstract data, image data can also be presented in the form of a detailed glyph (see example illustration). It is particularly suitable for gesture interactions on multi-touch surfaces as well as for flexible displays.",
        "crossReference": "The design pattern should be combined with a design pattern that represents results of a search or large data sets, such as the Interactive Point Cloud or Pixel Cluster design patterns.",
        "problem": "The user looks at several results or large amounts of data. He would like to receive detailed information on certain products and collect them for comparison with other interesting products.",
        "solutionApproach": "A focus area is used to collect products and display a higher level of detail. This is positioned like a lens over the display and can be created, for example, by a touch & hold gesture. Objects of interest can be dragged into it. Further details can be presented by selecting the more detailed objects in the focus area, providing a semantic zoom. Selecting individual products in the focus area can further trigger a similarity search by highlighting similar products outside the focus area."
      },
      "sampleIllustration": {
         "imageNames": ["focus-area-with-(detail)-glyphs"],
        "imageExplanation":
        "Example of a focus area on an elastic display: selecting a glyph in the focus area glyph in the focus area, a higher level of detail with a preview image is presented"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Product Explorer",
          "imageName": "Product Explorer"
        }
      ]
    },
    {
      "uid": "pattern_pixel-cluster",
      "name": "pixel cluster",
      "imageName": "pixel-cluster",
      "facets": [
        "blocks_point-element",
        "blocks_free-form-grid",
        "blocks_cluster-layout-structure",
        "interaction_pan-interaction",
        "interaction_zoom-interaction",
        "interaction_inspect-interaction",
        "data_2d-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_analyze",
        "searchTask_examine"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Similarity search",
        "context": "The representation is suitable for searching for similar objects or exploration with fuzzy information needs. Both nominal (with a categorical colour scale) and ordered data types (with an ordinal colour scale) can be visualised. The representation is primarily suitable for desktop applications. For touch interaction, tools must be made available that facilitate the selection of individual points, such as a zoom or a magic lens.",
        "crossReference": "To display additional detailed information, a semantic zoom can be used, which leads, for example, to the design pattern Glyph Cluster. Furthermore, the design pattern Detailed view with text and image is suitable for additional information. The combination with the design pattern Histogram Filter allows the filtering of individual elements and the analysis of the distributions depending on the selected properties.",
        "problem": "The user is confronted with a high-dimensional data set where several properties are important for the analysis.",
        "solutionApproach": "Using dimensionality reduction algorithms, high-dimensional data sets can be transformed into a two-dimensional plot. This similarity-based layout arranges objects with similar properties close to each other, creating clusters. The colour value can be used to visualise a selected property and thus direct interest to certain areas or clusters of the plot. In order to be able to examine individual objects and their properties more closely, a tooltip is offered via mouse-over."
      },
      "sampleIllustration": {
         "imageNames": ["pixel-cluster"],
        "imageExplanation":
        "Cluster in the glyphboard prototype with ordinal colour scale and tooltip"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Glyphboard",
          "imageName": "Glyphboard"
        }
      ]
    },
    {
      "uid": "pattern_glyph-cluster",
      "name": "glyph cluster",
      "imageName": "glyph-cluster",
      "facets": [
        "blocks_glyph-element",
        "blocks_free-form-grid",
        "blocks_cluster-layout-structure",
        "interaction_pan-interaction",
        "interaction_zoom-interaction",
        "interaction_inspect-interaction",
        "data_multidimensional-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_analyze",
        "searchTask_compare",
        "searchTask_examine"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Similarity search",
        "context": "The design pattern is suitable for different data types that can be represented with different glyphs. Furthermore, both ordered and categorical data types can be represented using different colour scales. The concept is suitable for both desktop and multi-touch scenarios, whereby enough space should be offered for the cluster representations.",
        "crossReference": "The combination with the design pattern Pixel Cluster is useful to give an overview of the cluster distributions. Furthermore, the combination with the design pattern Histogram Filter allows the filtering of individual elements and the analysis of the distributions depending on the selected properties.",
        "problem": "The user is confronted with a data set that has been transformed into a two-dimensional plot by means of dimension reduction. He wants to know which characteristics of important properties are hidden in the different clusters.",
        "solutionApproach": "Glyphs are useful for displaying different properties of the data objects and making them comparable. An additional configuration menu with legend should be offered to clarify the assignment of the individual glyph characteristics and to give the possibility to exchange them. Furthermore, a panning approach is available to explore the information space with different clusters. A tooltip offers further additional information. Through a semantic zoom, several detailed representations of a glyph can be made accessible. To avoid overlapping of the glyphs within the clusters, a force simulation should be used that pushes the glyphs away from each other after zooming."
      },
      "sampleIllustration": {
         "imageNames": ["Glypboard-Glyphen_1", "Glyphboard_Starplot_1"],
        "imageExplanation":
        "Glyph cluster with flower glyphs (left) and star plots (right)"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Glyphboard",
          "imageName": "Glyphboard"
        }
      ]
    },
    {
      "uid": "pattern_radial-scatter-plot-with-glyphs",
      "name": "radial scatter plot with glyphs",
      "imageName": "radial-scatter-plot-with-glyphs",
      "facets": [
        "blocks_glyph-element",
        "blocks_radial-grid",
        "blocks_2d-plot-layout-structure",
        "interaction_select-interaction",
        "interaction_append-interaction",
        "data_multidimensional-data-structure",
        "data_ordinal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_inspire",
        "searchTask_analyze"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Similarity search",
        "context": "The design pattern is suitable for products with many abstract properties or for multi-user scenarios in which different user opinions are to be represented. It is suitable for both mouse and touch interaction, but sufficient space should be available to analyse the distributions (at least tablet size).",
        "crossReference": "The design pattern can, for example, be combined with design patterns of the similarity search or the recommendation-based search to define the criteria of the search. Furthermore, the design pattern Detail View with Text and Image is useful to identify further product details. The combination with the design pattern (Hierarchical) Glyph Cluster allows the grouping of glyphs according to selected properties (see example illustration).",
        "problem": "The user is looking for a product for which many abstract characteristics are relevant for the purchase decision. He already has a certain idea of the product characteristics and wants to find suitable products.",
        "solutionApproach": "A radial scatterplot is used, the centre of which represents the user's interests or a sample product. On this scatterplot, the products are arranged in the form of glyphs representing the different product features. Glyphs placed close to the centre of the scatterplot indicate a higher similarity to an example or the user's requirements."
      },
      "sampleIllustration": {
         "imageNames": ["radial-scatter-plot-with-glyphs"],
        "imageExplanation":
        "Radial scatterplot from the Movie-Recommender application showing the recommended films as glyphs with a preview image. The closer a film to the centre, the better its overall rating for all group members. The individual segments of the glyph indicate how strongly the film is recommended for the respective user (coded by colour). Furthermore, the films are clustered according to their genre."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Movie-Recommender",
          "imageName": "Movie-Recommender"
        }
      ]
    },
    {
      "uid": "pattern_(zoomable)-facet-filter",
      "name": "(zoomable) facet filter",
      "imageName": "(zoomable)-facet-filter",
      "facets": [
        "blocks_area-element",
        "blocks_rectangular-grid",
        "blocks_bars-layout-structure",
        "interaction_adjust-interaction",
        "interaction_filter-interaction",
        "interaction_zoom-interaction",
        "data_hierarchy-data-structure",
        "data_faceted-classification-data-structure",
        "data_ordinal-attribute-type",
        "data_nominal-attribute-type",
        "searchTask_formulate",
        "searchTask_analyze"
      ],
      "facetDividers": ["interaction_filter-interaction"],
      "info": {
        "searchTask": "Facet navigation",
        "context": "The design pattern is suitable for data sets that are based on a facet classification. The product attributes must be in categories or quantitative attributes must be converted into categories. It is suitable for both mouse and touch interaction, but sufficient space should be available to display the axes (at least tablet size).",
        "crossReference": "The design pattern can be combined with the Parallel Coordinates or Parallel Sets design pattern to enable an analysis of the products that match the current filter criteria. Furthermore, it can be combined with the design pattern Expandable List with Text or Results List with Image and Text to view the results.",
        "problem": "The user is confronted with a data set with many product properties and wants to narrow it down iteratively according to his needs.",
        "solutionApproach": "Each facet consists of stacked bars in the form of boxes or circles arranged on an axis. The size of the bars in each facet also provides information about the distribution of product properties in the dataset. If a hierarchical facet classification is available, it is possible to zoom into the axis to select the different hierarchy levels. Connections between facet attributes help to identify elements in the hierarchy level with the same parent element (see illustration, left). By activating the facet attributes, an iterative narrowing down of the result set is possible. The selection of several filters on one axis allows a logical OR linkage of these elements, the selection of filters on different axes, on the other hand, a logical AND linkage."
      },
      "sampleIllustration": {
         "imageNames": ["ZoomFacettenfilter", "Facettenfilter_Kreis"],
        "imageExplanation":
        "Hierarchical facet filters as boxes (left), facet filters as circles, where the white circle encodes the absolute occurrence in the dataset and the blue circle represents the set of the current selection (right)."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Parallel coordinates and parallel sets with zoomable axes",
          "imageName":
          "Parallel coordinates and parallel sets with zoomable axes"
        },
        {
          "name": "Parallel sets with circles ",
          "imageName": "Parallel sets with circles "
        }
      ]
    },
    {
      "uid": "pattern_parallel-coordinates",
      "name": "parallel coordinates",
      "imageName": "parallel-coordinates",
      "facets": [
        "blocks_line-element",
        "blocks_rectangular-grid",
        "blocks_parallel-plot-layout-structure",
        "interaction_highlight-interaction",
        "interaction_sort-interaction",
        "interaction_append-interaction",
        "data_faceted-classification-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "searchTask_reformulate",
        "searchTask_analyze",
        "searchTask_compare"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Facet navigation",
        "context": "The design pattern lends itself to multidimensional data sets that are in a facet classification. Mouse interaction is recommended to enable the selection of individual product lines.",
        "crossReference": "The design pattern can be combined with the design pattern (Zoomable) Facet Filter to allow facet navigation in the dataset. Furthermore, the combination with the design pattern Expandable List with Text or Result List with Image and Text is useful to view the results.",
        "problem": "The user is not satisfied with the results offered and would like to reformulate the search query or find more similar products to an interesting product.",
        "solutionApproach": "The individual products are displayed as Bézier curves, which intersect the facet characteristics at the respective point. Thus, during the search, they provide information about how many products are left with the current filter settings and how the search may need to be adjusted to obtain more results. Once an interesting product has been found, it can be moved to the centre of the axis area (see example illustration) to allow the search for products with similar characteristics."
      },
      "sampleIllustration": {
         "imageNames": ["ParalleleKoordinaten"],
        "imageExplanation": "Example of Parallel Coordinates with Financial Data: a selected product is shown in the centre of the axis area so that similar products near it can be analysed. To minimise the amount of product lines, a fuzzy filter is used (light grey area) to set the threshold for similar products."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Parallel coordinates and parallel sets with zoomable axes",
          "imageName":
          "Parallel coordinates and parallel sets with zoomable axes"
        },
        {
          "name": "Parallel sets with circles ",
          "imageName": "Parallel sets with circles "
        }
      ]
    },
    {
      "uid": "pattern_parallel-sets",
      "name": "parallel sets",
      "imageName": "parallel-sets",
      "facets": [
        "blocks_flow-element",
        "blocks_rectangular-grid",
        "blocks_parallel-plot-layout-structure",
        "interaction_highlight-interaction",
        "interaction_filter-interaction",
        "data_faceted-classification-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "searchTask_reformulate",
        "searchTask_analyze"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Facet navigation",
        "context": "The design pattern is suitable for data sets that are based on a facet classification. The product attributes must be in categories or quantitative attributes must be converted into categories. It is suitable for both mouse and touch interaction, but there should be sufficient space to display the axes and bands (at least tablet size).",
        "crossReference": "The design pattern is well suited to visualise records in a (hierarchical) facet classification with categorical properties and can therefore be combined with the design pattern (Zoomable) Facet Filter. Furthermore, the combination with the design pattern Expandable List with Text or Results List with Image and Text is suitable for viewing the results. To visualise the product properties of selected results, the overlay of the design pattern Parallel Coordinates is suitable.",
        "problem": "The user wants to analyse distributions in the data set and observe the current quantity ratios during the search in order to be able to reformulate the search query if necessary.",
        "solutionApproach": "The products are summarised as product sets and visualised as bands. The bands between two adjacent axes represent the intersection of products that meet the two connected facet values. The width of the bands provides information about the number of products that contain the two adjacent facet values. Curved bands are recommended to make it easier to follow their course across several axes."
      },
      "sampleIllustration": {
         "imageNames": ["ParallelSets"],
        "imageExplanation":
        "Parallel sets with circular facet filters based on a hotel dataset"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Parallel coordinates and parallel sets with zoomable axes",
          "imageName":
          "Parallel coordinates and parallel sets with zoomable axes"
        },
        {
          "name": "Parallel sets with circles ",
          "imageName": "Parallel sets with circles "
        }
      ]
    },
    {
      "uid": "pattern_histogram-filter",
      "name": "histogram filter",
      "imageName": "histogram-filter",
      "facets": [
        "blocks_area-element",
        "blocks_rectangular-grid",
        "blocks_bars-layout-structure",
        "interaction_select-interaction",
        "interaction_highlight-interaction",
        "interaction_adjust-interaction",
        "data_faceted-classification-data-structure",
        "data_quantitative-attribute-type",
        "searchTask_formulate",
        "searchTask_analyze"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Facet navigation",
        "context": "The design pattern is suitable for data sets that are based on a facet classification. Due to the filigree bars, it is predominantly suitable for mouse interaction.",
        "crossReference": "The design pattern is suitable as a filter for combination with various design patterns that present the result set, such as the pixel cluster or glyph cluster.",
        "problem": "The user wants to analyse distributions in the data set and formulate complex search queries.",
        "solutionApproach": "Histograms can be used to analyse the distribution of individual properties in the data set. For example, a histogram can represent the property \"price\" and indicate how many products are in which price segments. At the same time, the bars of the histogram can be used as filters, e.g. to filter products in a certain price range. The bars can be combined with each other or whole ranges can be selected (see example illustration), which corresponds to a logical OR operation. Furthermore, values in different histograms can be selected, which corresponds to a logical AND link."
      },
      "sampleIllustration": {
         "imageNames": ["histogram-filter"],
        "imageExplanation": "Example from the Glyphboard application with one histogram per property of the data set. To facilitate filtering of the data, the histograms can be enlarged and a range can be selected or subsequently moved using the drag & drop gesture (area highlighted in blue)."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Glyphboard",
          "imageName": "Glyphboard"
        }
      ]
    },
    {
      "uid": "pattern_hierarchical-glyph-cluster",
      "name": "hierarchical glyph cluster",
      "imageName": "hierarchical-glyph-cluster",
      "facets": [
        "blocks_area-element",
        "blocks_glyph-element",
        "blocks_free-form-grid",
        "blocks_cluster-layout-structure",
        "interaction_filter-interaction",
        "interaction_zoom-interaction",
        "data_hierarchy-data-structure",
        "data_nominal-attribute-type",
        "searchTask_formulate"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Recommendation-based search",
        "context": "The design pattern is suitable for categorical data. Hierarchies can be mapped via different zoom levels. Furthermore, the design pattern is suitable for desktop scenarios as well as for multi-touch interfaces.",
        "crossReference": "The design pattern can be combined with the design pattern Radial Scatterplot with Glyphs to sort the results based on the ranking of the recommendation algorithm. Furthermore, the detailed view with text and image is suitable to display additional information about the individual products.",
        "problem": "The user is not yet satisfied with the recommendations and would like to receive more results on a specific topic.",
        "solutionApproach": "The recommended products are displayed as glyphs and arranged thematically by groups. If the user wants to be offered more results on a certain topic, he can zoom into the respective topic. The recommendations are then recalculated and only products that correspond to the selected topic are offered."
      },
      "sampleIllustration": {
         "imageNames": ["hierarchical-glyph-cluster"],
        "imageExplanation": "The glyphs represent suggested films. The centre of the glyph represents the film poster, while the individual segments encode different user preferences. The films are grouped according to their film genre (e.g. \"Drama\"). By selecting a genre cluster, further films corresponding to this genre are suggested."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Movie-Recommender",
          "imageName": "Movie-Recommender"
        }
      ]
    },
    {
      "uid": "pattern_tiles-with-filter-concepts",
      "name": "tiles with filter concepts",
      "imageName": "tiles-with-filter-concepts",
      "facets": [
        "blocks_image-element",
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_tiles-layout-structure",
        "interaction_select-interaction",
        "interaction_filter-interaction",
        "interaction_append-interaction",
        "data_ontology-data-structure",
        "data_nominal-attribute-type",
        "searchTask_inspire",
        "searchTask_formulate"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Recommendation-based search",
        "context": "The design pattern is suitable for complex data structures. The recommendation algorithm hides this complexity from the user and only offers the information that helps to reduce the result set to a manageable size in a search iteration. The concept is suitable for both desktop and multi-touch scenarios.",
        "crossReference": "The design pattern can be combined with, for example, the result list with image and text or the tile view with images to present the results of each iteration step. Furthermore, the Ordered Filter History is suitable to present the already selected image concepts and to undo filter decisions. The screen display with filters is suitable to examine the influence of the individual image concepts on the result set more closely. Furthermore, the design pattern mood board with glyph cluster is suitable for collecting and sorting results.",
        "problem": "The user's need for information is very vague and he wants to be inspired by what is on offer without spending too much time browsing through long lists of results.",
        "solutionApproach": "The user is offered image-based concepts in a 3x3 grid. The maximum number of visual concepts is based on Miller's Law, which states that a person can hold only 7 ± 2 units of information in short-term memory at the same time. The visual concepts should appeal to the user's emotions and are offered together with a concise title. Based on the user's selection, the interface presents the best concepts that reduce the result set as quickly as possible."
      },
      "sampleIllustration": {
         "imageNames": ["tiles-with-filter-concepts"],
        "imageExplanation":
        "Visual image concepts represent different holiday motifs"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Get Inspired",
          "imageName": "Get Inspired"
        }
      ]
    },
    {
      "uid": "pattern_hierarchical-configuration-menu",
      "name": "hierarchical configuration menu",
      "imageName": "hierarchical-configuration-menu",
      "facets": [
        "blocks_area-element",
        "blocks_radial-grid",
        "blocks_mosaic-layout-structure",
        "blocks_partitioned-layout-structure",
        "interaction_select-interaction",
        "interaction_inspect-interaction",
        "interaction_adjust-interaction",
        "data_hierarchy-data-structure",
        "data_nominal-attribute-type",
        "searchTask_reformulate",
        "searchTask_compare",
        "searchTask_inspire"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Recommendation-based search",
        "context": "The design pattern is suitable for adapting user preferences for categorical or hierarchical data sets and is optimised for use on the smartphone.",
        "crossReference": "The design pattern can be combined with the map view with result ranking to display the results and with the image-based preference selection to specify the preferences.",
        "problem": "The user wants to examine offered results on a map more closely and, if necessary, update his user preferences.",
        "solutionApproach": "By selecting a location on the map, the user is offered a configuration menu. The different categories are represented in the form of pictograms and colour-matched circles. These nodes are arranged in a radial grid around the location. The user can enlarge or reduce the nodes by means of a \"touch-and-hold\" gesture. As soon as the user selects a node of the upper category, he is offered the corresponding subcategories, which cannot be displayed simultaneously due to the limited screen size. The nodes represent both the user preferences and the characteristics of the selected location. Consequently, each node has two different radii. A radius indicates the user relevance based on the preferences entered at the beginning and is represented by a filled circle. The white radius, on the other hand, represents how relevant the current property is to the selected location. If the user relevance is higher than the relevance of the location, the radius is shown inside the filled circle or outside if the relevance ratio is reversed."
      },
      "sampleIllustration": {
         "imageNames": ["hierarchical-configuration-menu"],
        "imageExplanation":
        "Top categories (left) and subcategories (right) of the Findr app"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Findr",
          "imageName": "Findr"
        }
      ]
    },
    {
      "uid": "pattern_image-based-preference-selection",
      "name": "image based preference selection",
      "imageName": "image-based-preference-selection",
      "facets": [
        "blocks_image-element",
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_single-layout-structure",
        "interaction_select-interaction",
        "interaction_append-interaction",
        "data_hierarchy-data-structure",
        "data_nominal-attribute-type",
        "searchTask_inspire",
        "searchTask_formulate"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Recommendation-based search",
        "context": "The design pattern is suitable for categorical or hierarchical data structures and enables inspiration through various image concepts. The gestures and the presentation in the form of individual cards are optimised for use on a smartphone.",
        "crossReference": "The design pattern lends itself to the explicit communication of preferences and should be combined with a design pattern for the presentation of results, such as the map view with result ranking or the result list with image and text.",
        "problem": "The user is looking for suggestions for a product and wants to explicitly tell the system his preferences.",
        "solutionApproach": "The system offers the user categories in the form of cards with a picture, an icon and a title. By swiping to the left, the user can deselect the category and swipe to the right. For hierarchical categories, the swipe gesture upwards can also be offered, which presents the next hierarchical level to the user. Since the gestures have to be learned first, a short tutorial can be used to explain the operation of the application the first time it is used (see example illustration, centre)."
      },
      "sampleIllustration": {
         "imageNames": [
          "dialog_oberkategorie",
          "dialog_tutorial",
          "dialog_unterkategorie"
        ],
        "imageExplanation":
        "Categories from the Findr app to search for suitable leisure activities"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Findr",
          "imageName": "Findr"
        }
      ]
    },
    {
      "uid": "pattern_tile-view-with-images",
      "name": "tile view with images",
      "imageName": "tile-view-with-images",
      "facets": [
        "blocks_image-element",
        "blocks_rectangular-grid",
        "blocks_tiles-layout-structure",
        "interaction_highlight-interaction",
        "interaction_zoom-interaction",
        "data_set-data-structure",
        "data_ordinal-attribute-type",
        "searchTask_inspire",
        "searchTask_verify"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for displaying image-based results. It is suitable for both multi-touch interfaces with touch interaction and desktop applications with mouse interaction.",
        "crossReference": "The design pattern can be combined with different design patterns of the category Facet Navigation, Keyword Based Search, Similarity Search or Recommendation Based Search to provide matching results based on thumbnail images based on the filter settings.",
        "problem": "The user is confronted with a large, image-based result set that he wants to browse through as quickly as possible.",
        "solutionApproach": "To provide an overview of the dataset, the visualisations are presented in the form of small thumbnails in a tile view. In order to view the visualisations more closely, a zoom function is offered that displays a detailed view at the highest zoom level."
      },
      "sampleIllustration": {
         "imageNames": ["05_DelViz"],
        "imageExplanation":
        "Example of the DelViz application: at the top left, the number of results and the selected filters are indicated"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "DelViz",
          "imageName": "DelViz"
        }
      ]
    },
    {
      "uid": "pattern_tile-view-with-subsets",
      "name": "tile view with subsets",
      "imageName": "tile-view-with-subsets",
      "facets": [
        "blocks_image-element",
        "blocks_rectangular-grid",
        "blocks_bars-layout-structure",
        "interaction_highlight-interaction",
        "interaction_zoom-interaction",
        "data_temporal-data-structure",
        "data_nominal-attribute-type",
        "searchTask_reformulate",
        "searchTask_trace"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for displaying image-based results. It is suitable for both multi-touch interfaces with touch interaction and desktop applications with mouse interaction.",
        "crossReference": "The design pattern can be combined with different design patterns of the category Facet Navigation, Keyword Based Search, Similarity Search or Recommendation Based Search to provide matching results based on the filter settings, based on preview images, and to make the impact of each iteration visible.",
        "problem": "The user wants to understand which results fall out of the result set due to his filter criteria.",
        "solutionApproach": "The results are summarised into different sets in preview images. Through iterative filter selection, subsets are split off from the result set and arranged in the form of bars. Since the results are not completely hidden, a fuzzy search is possible. Instead of visualising the bars in a constant width, they are dynamically adjusted to make optimal use of the available space. By default, the current result set is displayed enlarged. The individual subsets can be examined more closely using a zoom function."
      },
      "sampleIllustration": {
         "imageNames": ["06_DelViz"],
        "imageExplanation":
        "Example of the DelViz application with four subsets: the left subset corresponds to the current result set and is shown enlarged"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "DelViz",
          "imageName": "DelViz"
        }
      ]
    },
    {
      "uid": "pattern_scrollable-detailed-view",
      "name": "scrollable detailed view",
      "imageName": "scrollable-detailed-view",
      "facets": [
        "blocks_image-element",
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_single-layout-structure",
        "interaction_zoom-interaction",
        "interaction_navigate-interaction",
        "data_set-data-structure",
        "data_ordinal-attribute-type",
        "searchTask_inspire",
        "searchTask_examine"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for displaying ordered results with extensive additional information in text and image form. Furthermore, it is suitable for smartphones and tablets with touch interaction as well as for desktop applications with mouse interaction. For the first scenario, a swipe gesture can be used. For the desktop scenario, interactive icons are suitable to trigger navigation.",
        "crossReference": "The design pattern can be combined, for example, with the design patterns Tile view with images, Tile view with subsets or Result list with image and text, which allow access to the entire result set. The result set should be in one order.",
        "problem": "The user wants to view certain results in detail. However, constantly jumping back and forth between the overview and the detailed view hinders quick navigation in the results.",
        "solutionApproach": "A detailed view is provided, which offers image and additional information in a structured form. In order to avoid constant jumps back to the overview, a scrolling function is provided, allowing the user to navigate forwards or backwards through the list of results."
      },
      "sampleIllustration": {
         "imageNames": ["07_DelViz"],
        "imageExplanation": "Example from the DelViz application: the detailed information as well as the keywords contained are arranged in a tabular layout below the image. Next to the image, the respective neighbouring example for navigation to the front or back is already shown cropped."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "DelViz",
          "imageName": "DelViz"
        }
      ]
    },
    {
      "uid": "pattern_indented-taxonomy",
      "name": "indented taxonomy",
      "imageName": "indented-taxonomy",
      "facets": [
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_indented-layout-structure",
        "data_hierarchy-data-structure",
        "data_nominal-attribute-type",
        "searchTask_verify"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is assigned to the search pattern Browsing in structured content and can be used for both targeted and vague search tasks. It is suitable for structuring many filters as well as many result entries. Depending on the complexity of the data set, the child nodes can be presented in a static visualisation or gradually expanded.",
        "crossReference": "The design pattern can be combined with design patterns that use the List module as a layout structure, such as the multi-column keyword filter or result list with image and text.",
        "problem": "The user is confronted with a large number of entries and does not pursue a specific search goal. Rather, he wants to get an overview of the subject areas to which the entries belong.",
        "solutionApproach": "A taxonomy organises the entries according to different supercategories. If the entries are in a list view, they can be attached to the leaf nodes of the taxonomy. The indentation of the respective child nodes gives an overview of the structure of the taxonomy and the thematic distribution of the entries."
      },
      "sampleIllustration": {
         "imageNames": ["02_DelViz_1"],
        "imageExplanation":
        "Example of the DelViz application with the categories of the classification scheme (left) and the corresponding dimensions (right)"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "DelViz",
          "imageName": "DelViz"
        }
      ]
    },
    {
      "uid": "pattern_glyphs-with-legend",
      "name": "glyphs with legend",
      "imageName": "glyphs-with-legend",
      "facets": [
        "blocks_glyph-element",
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_single-layout-structure",
        "blocks_list-layout-structure",
        "data_multidimensional-data-structure",
        "data_nominal-attribute-type",
        "data_ordinal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_compare",
        "searchTask_verify"
      ],
      "facetDividers": ["blocks_single-layout-structure"],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for multidimensional data sets with different attribute types. It is suitable for desktop scenarios with mouse interaction as well as for multi-touch interaction.",
        "crossReference": "The design pattern is suitable for combination with glyph-based representations such as the glyph cluster, the tile view with glyphs or the scatterplot with glyphs.",
        "problem": "The user is offered a result set with glyph representations, but does not understand what the visual variables used mean.",
        "solutionApproach": "A legend with glyph representation and title or short description of the properties helps the user to understand the structure of the glyph. The legend can be interactive and always show the glyph that the user has currently selected. If the user has selected several glyphs, these can be arranged in a list in order to identify individual product properties in the enlarged display and to support the comparison of his selection."
      },
      "sampleIllustration": {
         "imageNames": ["GlyphlegendeGlyphboard", "12-glyphlegende"],
        "imageExplanation": "Glyph legend in the glyph board (left) and listing of selected glyphs in the example-based search (right)"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Example-based search with scatterplot layout",
          "imageName": "Example-based search with scatterplot layout"
        }
      ]
    },
    {
      "uid": "pattern_result-list-with-picture-and-text",
      "name": "result list with picture and text",
      "imageName": "result-list-with-picture-and-text",
      "facets": [
        "blocks_image-element",
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_list-layout-structure",
        "interaction_pan-interaction",
        "interaction_inspect-interaction",
        "interaction_select-interaction",
        "data_set-data-structure",
        "data_ordinal-attribute-type",
        "searchTask_inspire",
        "searchTask_verify"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for product data whose visual form plays an important role in the purchase decision and should appeal to the user's emotions. It is suitable for multi-touch interfaces such as smartphone and tablet as well as for mouse interaction in desktop scenarios.",
        "crossReference": "The design pattern should be offered with a design pattern to narrow down the results in the list like the tiles with filter concepts, the parallel sets or the multi-column keyword filter.",
        "problem": "The user wants to be inspired by what is on offer and be able to quickly assess whether the results currently on offer match his or her preferences.",
        "solutionApproach": "The results are offered in a list with thumbnails and a short description. Single images or composite image collages (see sample images) can be used to enable the identification of suitable products."
      },
      "sampleIllustration": {
         "imageNames": ["10_parallel_sets_1", "10_getInspired_1"],
        "imageExplanation":
        "Results list with one picture (left) or as a picture collage (right)"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Facettice",
          "imageName": "Facettice"
        },
        {
          "name": "Parallel sets with circles",
          "imageName": "Parallel sets with circles"
        },
        {
          "name": "Get Inspired",
          "imageName": "Get Inspired"
        }
      ]
    },
    {
      "uid": "pattern_fold-out-list-of-results-with-text",
      "name": "fold out list of results with text",
      "imageName": "fold-out-list-of-results-with-text",
      "facets": [
        "blocks_text-element",
        "blocks_rectangular-grid",
        "blocks_list-layout-structure",
        "interaction_append-interaction",
        "interaction_remove-interaction",
        "interaction_inspect-interaction",
        "interaction_highlight-interaction",
        "interaction_adjust-interaction",
        "data_set-data-structure",
        "data_ordinal-attribute-type",
        "searchTask_collect",
        "searchTask_trace",
        "searchTask_examine"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for abstract product data that can be described in textual form. The results should be in an ordered form. It is suitable for both mouse and touch interaction. For the latter, the text elements should be large enough to be selected by touch.",
        "crossReference": "The design pattern is suitable for combination with design patterns that limit the result set, such as Parallel Coordinates or Parallel Sets.",
        "problem": "The user wants to collect results and examine them more closely. He also wants to get an overview of which results have already been investigated.",
        "solutionApproach": "The results are arranged in a list and offered with a short title. If the user wishes to obtain additional information, he or she can expand the individual results so that the list is expanded in a similar way to an accordion. Furthermore, the list can be filtered by selecting different tabs and, for example, the filtered results (results list), the viewed results (search history) and the remembered results (collective list) can be displayed. Furthermore, it is possible to colour the text elements to highlight results already viewed in the list."
      },
      "sampleIllustration": {
         "imageNames": ["TextListe"],
        "imageExplanation":
        "Result list with folded-out detailed information of a selected result, results already viewed are shown in red"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Parallel coordinates and parallel sets with zoomable axes",
          "imageName":
          "Parallel coordinates and parallel sets with zoomable axes"
        }
      ]
    },
    {
      "uid": "pattern_ordered-filter-history",
      "name": "ordered filter history",
      "imageName": "ordered-filter-history",
      "facets": [
        "blocks_image-element",
        "blocks_rectangular-grid",
        "blocks_list-layout-structure",
        "interaction_pan-interaction",
        "interaction_remove-interaction",
        "data_temporal-data-structure",
        "data_ordinal-attribute-type",
        "searchTask_trace"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for sorting temporal data structures. It can be used for both desktop and touch interfaces.",
        "crossReference": "The design pattern is suitable for combination with filter areas that offer visual concepts such as the tiles with image concepts or the image-based preference selection.",
        "problem": "The user wants to be able to track which search criteria have already narrowed down the result set. The filter criteria were determined with the help of image-based concepts. If he does not find any suitable results in the offered result set, it should be possible to remove filter criteria.",
        "solutionApproach": "Analogous to breadcrumbs, a filter history contains all selected visual image concepts that are ordered based on the time of selection. If the result set has been narrowed down too much, it is possible to delete individual filter criteria. If the filter history is too long, the user is offered a scroll bar to scan all image concepts. The filter history can be set up horizontally (see example illustration, right) or vertically (see example illustration, left)."
      },
      "sampleIllustration": {
         "imageNames": ["Fliterliste", "ordered-filter-history"],
        "imageExplanation":
        "Vertical and horizontal filter history in the GetInspired application"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Get Inspired",
          "imageName": "Get Inspired"
        }
      ]
    },
    {
      "uid": "pattern_detail-view-with-text-and-picture",
      "name": "detail view with text and picture",
      "imageName": "detail-view-with-text-and-picture",
      "facets": [
        "blocks_text-element",
        "blocks_image-element",
        "blocks_rectangular-grid",
        "blocks_single-layout-structure",
        "searchTask_examine"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for different data types and displays a detailed section of the data set in each case. It is suitable for both touch and mouse interaction.",
        "crossReference": "The design pattern is suitable for abstract result representations that require an investigation of further textual or image-based properties. Examples of these design patterns are the Interactive Point Cloud, the Radial Scatterplot with Glyphs, the Pixel Cluster or the Glyph Cluster.",
        "problem": "The user wants to examine individual filter criteria or results more closely and obtain additional information.",
        "solutionApproach": "Additional information is offered to the user in a detailed view. This can contain both text and image information. The detailed view can be displayed as an overlay on a result display or located in a separate part of the interface."
      },
      "sampleIllustration": {
         "imageNames": ["detail-view-with-text-and-picture"],
        "imageExplanation": "Overlay of the Movie Recommender prototype: selected films are shown in a detailed display with film poster, title, genre, year and short description."
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Movie-Recommender",
          "imageName": "Movie-Recommender"
        }
      ]
    },
    {
      "uid": "pattern_mood-board-with-glyph-cluster",
      "name": "mood board with glyph cluster",
      "imageName": "mood-board-with-glyph-cluster",
      "facets": [
        "blocks_glyph-element",
        "blocks_image-element",
        "blocks_free-form-grid",
        "blocks_cluster-layout-structure",
        "interaction_group-interaction",
        "interaction_remove-interaction",
        "interaction_inspect-interaction",
        "interaction_highlight-interaction",
        "data_set-data-structure",
        "data_nominal-attribute-type",
        "data_quantitative-attribute-type",
        "searchTask_collect",
        "searchTask_compare",
        "searchTask_verify"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for a set of search results that are to be collected and structured during the search. The mood board is suitable for both desktop and touch applications.",
        "crossReference": "The design pattern can be combined with design patterns that represent the results and offer a selection like the screen display with filters or the result list with image and text.",
        "problem": "The user wants to collect interesting results during the search and structure his finds. The aim is to make the results comparable without having to jump back and forth between the various individual views of the results and the overview.",
        "solutionApproach": "The elements can be freely placed and grouped on the mood board. The metaphor of liquids is used for this: If the elements are placed close enough on the mood board, they merge into a group. The dissolution of the group can in turn be triggered by pulling an element away. In addition to structuring, grouping offers the advantage of being able to compare grouped elements directly with each other. In order to display important properties of the results, they are provided with an information display, which can contain various properties such as diagrams, evaluation, etc. The information display can also be used to display the results. Glyphs can also be used to display the various properties. A menu allows setting different focus points. If the results are in a common group, the menus are linked together to represent the same data dimension for comparison."
      },
      "sampleIllustration": {
         "imageNames": ["17_Motbasi_2"],
        "imageExplanation": "Moodboard of the MotBasi application: the results are represented in circles with image preview or diagram in the circle centre"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Motbasi",
          "imageName": "Motbasi"
        }
      ]
    },
    {
      "uid": "pattern_interactive-point-cloud",
      "name": "interactive point cloud",
      "imageName": "interactive-point-cloud",
      "facets": [
        "blocks_point-element",
        "blocks_free-form-grid",
        "blocks_cluster-layout-structure",
        "interaction_distort-interaction",
        "interaction_select-interaction",
        "interaction_group-interaction",
        "data_multidimensional-data-structure",
        "data_nominal-attribute-type",
        "data_quantitative-attribute-type",
        "data_ordinal-attribute-type",
        "searchTask_analyze"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for multidimensional data sets with different attribute types. It is suitable for touch interfaces and flexible displays that allow playful interaction using gestures.",
        "crossReference": "The design pattern can be combined with design patterns that offer additional detail information, such as the glyph cluster or the focus area with glyphs.",
        "problem": "Many product data should be made accessible to the user in a playful way and be able to be sorted according to various criteria. The user still wants to analyse the distributions in the data set.",
        "solutionApproach": "The product data are located as points on a surface. The user can arrange and group them freely or according to selected criteria (e.g. ratings, product categories). The colour value of the points represents a property of the data set and can be coded with an ordinal or a categorical colour scale depending on the attribute type. Furthermore, it is possible to select individual products and collect them in a region of the interface by dragging them across the surface."
      },
      "sampleIllustration": {
         "imageNames": ["focus-area-with-(detail)-glyphs"],
        "imageExplanation":
        "Example of the Product Explorer prototype on a flexible display in combination with a focus area with semantic zoom"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Product Explorer",
          "imageName": "Product Explorer"
        }
      ]
    },
    {
      "uid": "pattern_map-view-with-results-ranking",
      "name": "map view with results ranking",
      "imageName": "map-view-with-results-ranking",
      "facets": [
        "blocks_icon-element",
        "blocks_rectangular-grid",
        "blocks_map-layout-structure",
        "interaction_pan-interaction",
        "interaction_select-interaction",
        "interaction_zoom-interaction",
        "data_spatial-data-structure",
        "data_ordinal-attribute-type",
        "searchTask_compare"
      ],
      "facetDividers": [],
      "info": {
        "searchTask": "Browsing in structured content",
        "context": "The design pattern is suitable for geographical data with destinations sorted by a certain criterion. The map is suitable for both touch interaction and mouse interaction and can also be applied to small displays.",
        "crossReference": "The design pattern can be well combined with design patterns in which one can define preferences, such as Image-Based Preference Selection or Hierarchical Configuration Menu.",
        "problem": "The user wants to find an offer that is as close as possible to his current position or a certain area of interest. Furthermore, he wants to be able to assess how much the destination matches his preferences.",
        "solutionApproach": "The offers are positioned on a map in the form of icons and the user's current position is highlighted on them so that they can estimate distances. The icons are also numbered so that the user can assess how closely the destination matches their preferences, in addition to the distance. By panning and zooming, the user can explore the map and examine streets or public transport. The locations can be selected and viewed in more detail in a preview."
      },
      "sampleIllustration": {
         "imageNames": ["map-view-with-results-ranking"],
        "imageExplanation": "Findr app with placement of the 10 best matches on a map, the blue dot represents the current location of the user"
      },
      "examples": [],
      "interfaces": [
        {
          "name": "Findr",
          "imageName": "Findr"
        }
      ]
    }
  ]
}